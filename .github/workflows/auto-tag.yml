name: Tag Main Releases

on:
  push:
    branches:
      - main

jobs:
  create-tag:
    name: Create release tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect version change
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          CURRENT_VERSION=$(node -p "JSON.parse(require('fs').readFileSync('apps/ratewise/package.json','utf8')).version")
          echo "current_version=${CURRENT_VERSION}" >> "$GITHUB_OUTPUT"

          if git show HEAD^:apps/ratewise/package.json >/tmp/prev-package.json 2>/dev/null; then
            PREVIOUS_VERSION=$(node -p "JSON.parse(require('fs').readFileSync('/tmp/prev-package.json','utf8')).version")
          else
            PREVIOUS_VERSION=""
          fi

          if [ -n "$PREVIOUS_VERSION" ] && [ "$PREVIOUS_VERSION" = "$CURRENT_VERSION" ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          TAG="ratewise-v${CURRENT_VERSION}"
          if git rev-parse "refs/tags/${TAG}" >/dev/null 2>&1; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "changed=true" >> "$GITHUB_OUTPUT"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

      - name: Configure git user
        if: steps.detect.outputs.changed == 'true'
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        if: steps.detect.outputs.changed == 'true'
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ steps.detect.outputs.tag }}"
          VERSION="${{ steps.detect.outputs.current_version }}"
          git tag -a "$TAG" -m "RateWise ${VERSION}"
          git push origin "$TAG"
