# 方案 2：使用獨立分支 (推薦) ⭐
# 
# 優點：
# - 主分支 commit 歷史保持乾淨
# - 匯率更新在獨立分支，可以隨時 squash
# - CDN 可以同時讀取 main 和 rates 分支
# 
# 使用方式：
# 1. 重命名此檔案為 update-exchange-rates.yml
# 2. 更新 CDN URLs 指向 rates 分支

name: Update Exchange Rates (Branch Strategy)

on:
  schedule:
    # 每30分鐘執行一次
    - cron: '0,30 * * * *'
  workflow_dispatch:

jobs:
  update-rates:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Create/Switch to rates branch
        run: |
          # 如果 rates 分支不存在，從 main 建立
          git fetch origin rates:rates || git checkout -b rates
          git checkout rates
          
          # 確保有最新的匯率腳本
          git checkout main -- scripts/fetch-taiwan-bank-rates.js
          git checkout main -- public/rates/

      - name: Fetch Taiwan Bank exchange rates
        run: |
          echo "🔄 Fetching exchange rates from Taiwan Bank..."
          node scripts/fetch-taiwan-bank-rates.js

      - name: Check for changes
        id: git-check
        run: |
          git diff --quiet public/rates/latest.json || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit and push if changed
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/rates/latest.json

          UPDATE_TIME=$(node -p "JSON.parse(require('fs').readFileSync('public/rates/latest.json')).updateTime")
          CURRENCY_COUNT=$(node -p "Object.keys(JSON.parse(require('fs').readFileSync('public/rates/latest.json')).rates).length")

          # 在 rates 分支上，直接覆蓋上一個 commit
          git commit --amend --no-edit -m "chore(rates): latest exchange rates - ${UPDATE_TIME}" \
            -m "Updated ${CURRENCY_COUNT} currencies from Taiwan Bank" \
            -m "🤖 Auto-updated on rates branch" \
            -m "Source: https://rate.bot.com.tw/xrt" || \
          git commit -m "chore(rates): latest exchange rates - ${UPDATE_TIME}" \
            -m "Updated ${CURRENCY_COUNT} currencies from Taiwan Bank" \
            -m "🤖 Auto-updated on rates branch" \
            -m "Source: https://rate.bot.com.tw/xrt"
          
          git push --force-with-lease origin rates

      - name: Update summary
        if: steps.git-check.outputs.changed == 'true'
        run: |
          echo "✅ Exchange rates updated on \`rates\` branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** rates (isolated from main)" >> $GITHUB_STEP_SUMMARY
          echo "**Currencies Updated:** $(node -p "Object.keys(JSON.parse(require('fs').readFileSync('public/rates/latest.json')).rates).length")" >> $GITHUB_STEP_SUMMARY
          echo "**Update Time:** $(node -p "JSON.parse(require('fs').readFileSync('public/rates/latest.json')).updateTime")" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**CDN URLs:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`https://cdn.jsdelivr.net/gh/haotool/app@rates/public/rates/latest.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`https://raw.githubusercontent.com/haotool/app/rates/public/rates/latest.json\`" >> $GITHUB_STEP_SUMMARY

